/* 
    중간과제9 : 기계식 주차장 시스템 구현 (키오스크)
        [요구사향]
        1. 주차할수 있는 총 차량 대수는 20대 입니다.
        2. 차량번호 와 주차 할 위치를 클릭/입력 받아 [입차] 버튼 클릭 한다.
            단] 해당 위치에 입차된 차량이 존재하면 '입차불가' 안내 출력 아니면 '입차성공' 안내 출력
        3. 차량번호 를 입력받아 [출차] 버튼 클릭한다.
            단] 출차 되는 차량의 위치 와 주차료(금액) 를 안내 출력
            단] 금액은 1초당 100원 계산 , 단 하루가 지나지 않는 조건
        ======================================================================================
        [개발순서]
        1. 프론트엔드 html 구성
        2. JS 메모리 구성( 배열/변수/CSV )
        3. 함수 구성( 함수명 , 실행조건 , 매개변수 판단 )
        4. 각 함수별 기능 구현 , 코드 작성
        5. 각 함수별 기능 구현 후 HTML(onclick) 연동
        6. 테스트
        ======================================================================================
*/

let 주차정보목록 = [ "빈좌석","빈좌석","1111,10:11:11","빈좌석","빈좌석",
                    "빈좌석","빈좌석","빈좌석","빈좌석","빈좌석",
                    "빈좌석","빈좌석","빈좌석","빈좌석","빈좌석",
                    "빈좌석","빈좌석","빈좌석","빈좌석","빈좌석" ]
console.log( 주차정보목록 );

//[1] 입차함수 // [입차] 버튼 클릭 했을때, 차량번호/주차위치
function 입차함수(){ console.log('입차함수');

    // 1. [입력]차량번호 / 주차위치를 HTML에서 입력받은값을 jS로 가져온다.  document.querySelector( )
    let 차량번호 = document.querySelector('.inCarNum').value ; // console.log( 차량번호 );
    let 주차위치 = document.querySelector('.inCarLoc').value ; // console.log( 주차위치 );
    // 2. [처리] 1. 빈좌석인지 확인 2. 두 정보를 하나의문자열(CSV)로 구성해서 주차정보목록(배열) 저장한다.  1. if 2. .push
        // (검사1) 빈좌석인지 체크 , if에 선택한 인덱스(주차위치)가 값이 '빈좌석' 문자열이면
        if( 주차정보목록[주차위치-1] != "빈좌석" ){ // != 같지않다.
            console.log('이미 주차된 차량이 존재합니다.');
            return; // 리턴값 , 반환값 // 함수가 종료된다. // return : 함수종료 vs break 반복문종료
            // 리턴하는데 값이 없이 return 사용시 함수 종료 목적으로 사용할수 있다.
            // 함수가 종료되므로 아래 코드(등록)는 실행되지 않는다.
        } // if end
        // (검사2) 위치가 유효한지 , 1~20 사이만 가능

        // (검사3) 차량번호 유효한지 , 이미 주차된 차량번호(중복)
    
    // 현재 시간 만들기 / 입차시간란 : 차량이 입력된 현재 시간을 구하는 것
    let 오늘 = new Date(); // 현재시간/날짜 기능/함수 제공하는 객체 반환
    let 시 = 오늘.getHours(); // 시 반환 함수
    let 분 = 오늘.getMinutes(); // 분 반환 함수
    let 초 = 오늘.getSeconds(); // 초 반환 함수
    let 입차시간 = `${시}:${분}:${초}`
        // !!: 주차위치란 : 현재 설계상 주차위치는 주차정보록록의 배열의 인덱스로 대체 중.     주차위치 == 배열인덱스
        // 인덱스란 : 0부터 요서의 저장순서번호 , 주차위치는 1부터 시작한다면 , 인덱스와 주차위칭번호의 차이는 -1
    
    주차정보목록[주차위치-1] = `${차량번호},${입차시간}` ;  // console.log( 주차정보목록 );

    // 3. [출력] 처리 결과를 내용을 출력한다.  console.log( )
    console.log( '입차성공');
    console.log('현재주차현황');
    console.log( 주차정보목록 );
} //

//[2] 출차함수 // [출차] 버튼 클릭했을떄 , 차량번호
function 출차함수(){

    // 1. [입력] 차량번호 HTML에서 입력받은 값을 JS로 가져온다.     document.querySelector( )
    let 출차차량번호 = document.querySelector('.outCarNum').value; //console.log(차량번호)
    // 2. [처리] 입력받은 차량번호의 입차시간과 현재시간(출차시간)를 초 로 환산하여 요금 계산하기. , 계산식
    // -- 현재 차량번호가 존재하는지 검사. 1층부터 20층까지 확인 , 순회

    // 증거/기록 , 상태 저장 용도 변수 활용
    let searchOk = false;
    for( let index = 0 ; index <= 주차정보목록.length - 1 ; index++){
        // index는 0부터 마지막 인덱스까지 1씩 증가 반복
        let 차량정보 = 주차정보목록[index]; // index번째의 차량정보를 꺼내기
        if( 차량정보 == '빈좌석' ){ continue; }
            // continue; 란? 가장 가까운 반복문으로 이동 // 빈좌석이면 차량번호를 확인할 필요가 없으므로 패스
        // 차량번호 검사
        let 차량 =  차량정보.split(",") // 차량[0] = 차량번호 , 차량[1] 입차시간
        let 입차차량번호 = 차량[0]
        let 입차시간 = 차량[1]
        if( 입차차량번호 == 출차차량번호 ){ // 이미 입차된 차량번호 와 출차차량 번호와 같으면
            searchOk = true;
            // + 요금 계산 , 초(당) 100원 , 출차시간 - 입차시간
                // 1. 출차시간 : 현재 출차를 요구했을때 현재시간
            let 출차시 = new Date().getHours();
            let 출차분 = new Date().getMinutes();
            let 출차초 = new Date().getSeconds();
            let 출차시간환산 = (출차시*360) + (출차분*60) + (출차초)
            let 입차시 = Number(입차시간.split(":")[0])
            let 입차분 = Number(입차시간.split(":")[1])
            let 입차초 = Number(입차시간.split(":")[2])
            let 입차시간환산 = (입차시*360) + (입차분*60) + (입차초)
            let 사용시간 = 출차시간환산 - 입차시간환산
            사용금액 = 사용시간 * 100
            // + 차량 정보 빼주기 , 차량문자열 => '빈좌석' 변경
            주차정보목록[index] = "빈좌석";
            console.log(`출차 완료 : 위치 : ${ index+1} 사용금액 : ${ 사용금액 }`) // 안내
            // 내가 원하는 목표를 찾거나 이뤘으면 반복문 종료해도 된다. // break;
            break; // 반복문 종료
        } // if end
    } // for end
    // for안에서 출차차량번호 을 못찾을때 실행되는 코드
    if( searchOk == false ){ console.log('주차된 차량이 존재하지 않습니다.');} 

    // 3. [출력] 요금과 차량 위치를 출력한다. , console.log( )
    console.log( 주차정보목록 );
} //