[ 언어 ]
    - 영어 학원 , 사람( 영어학습 ) - 말
        - 한국인(한국어)  ---- 번역(컴파일/인터프리터) ---- 미국인(영어)
        - 영어문법.암기 - 규칙
        - 한국어문법.암기 - 규칙

    - 컴퓨터 학원 , 사람( 컴퓨터 언어 ) - 말
        - 사람(HTML/CSS/JS언어) ---- 번역(컴파일/인터프리터) ---- 컴퓨터(기계어)
        - HTML/CSS/JS문법/암기 - 규칙

[ 웹 프로그래밍 언어 ]
    - HTML : 하이퍼텍스트 마크업 언어       = 뼈대
    - CSS : 캐스케이드 스타일 시트          = 옷    ---> HTML 없이 독단적으로 실행 불가능
    - JS : 자바 스크립트 언어               = 행동  ---> HTML 없이 독단적으로 실행 불가능
        HTML( CSS포함, JS 포함 )

[ JS ]
    - 2009년 이후 node.js 나오면서 백엔드 역할 가능해졌다. 인기 상승
    1. 웹 프로그래밍 ( HTML,CSS,JS )
    2. 웹 서버 ( node.js )
    3. 앱 ( REACT.JS.NATIVE )
    4. 소프트웨어 ( NW.JS )
        ---> 스타트업 ( 소규모 프로젝트 )

[ JS 적용하는 방법 ]
    1. <body> 마크업 안에서 <script> 마크업 사용
        <script>
            JS코드 작성
        </script>

    2. * JS파일 생성하여 HTML 에서 임포트(불러오기) 사용
        <head> 마크업 안에서 <script src="JS파일경로" >

[ JS 주석 ]
    1. /* 여러줄주석 */
    2. // 한줄주석

[ 리터럴 ]
    - 키보드로부터 직접 입력한 값 그 자체

[ 변수 ]
    - 하나의 자료/데이터를 저장하는 메모리 공간
    1. 변수 만들기
        1. let   |  2. 변수명    |  3. =    |  4. 리터럴/값
        let 변수명 = 리터럴
    2. 변수의 값 호울
        변수명
    3. 변수의 값 수정
        변수명 = 새로운값
    4. 변수의 연산
        let 변수명A = 변수명B + 10
    5. 변수의 초기화 , 변수가 생성될때 처음에 대입되는 행위/작업
        1. let 변수명 = 리터럴;
        2. let 변수명;         <----- undefined(값이 없다.)
    
[ 배열 ]
    1. 순서대로 번호가 붙인 원소 들이 연속적인 형태로 구성된 데이터 타입
    2. 인덱스? 순서대로 배정된 번호 , 0번 시작 , 길이/총개수 : 3개 이면 인덱스 0 1 2 (n-1)
    3. 배열 선언 : [ ] 대괄호 / ,(쉼표)를 이용한 값을 구분하여 열거 한다.
        let 변수명 = [ 값1 , 값2 , 값3 ]
    4. 배열전체 호출 : 배열변수명
    5. 배열내 특정한 위치의 요소(값) 호출 : 배열변수명[인덱스]
    6. 배열수정
        1. 전체 수정 : 배열변수명 = [새로운배열]
        2. 특정한 위치의 요소(값) 수정 : 배열변수명[인덱스] = 새로운값
    7. 배열내 요소 추가 : 
        .push( 새로운값 )
        .splice( 삽입할인덱스 , 0 , 새로운값 )
    8. 배열내 요소 삭제 :
        .splice( 삭제할인덱스 , 삭제개수 )
    9. 배열내 요소 찾기 : 
        -indexOf( 찾을데이터 ) , 배열내 찾을데이터가 존재하면 인덱스반환 없으면 -1 반환

[ 문자열 ]
    1. " " vs ' ' vs ` ` 으로 감싼 자료의 타입
    2. 이스케이프/제어 문자
        1. \n줄바꿈 , 2. \t들여쓰기 , 3. \"ㅡㄴ따옴표출력 , 4. \'작은따옴표출력 , 5. //백슬래시출력
    3. `백틱 템플릿 : 문자열 사이에 변수호출과 연산을 연결하는 문자열 구조 , 선언부 제외
        `문자열A ${ 변수호출 } ${ 연산 }  ${ 함수호출 } 문자열B`

[ 연산자 ]
    1. 산술연산자 : +더하기 -빼기 곱하기 /나누기 %나머지
    2. 연결연산자 : +연결
    3. 비교연산자 : >초과 <미만 >=이상 <=이하 ==(값)같다 !=(값)다르다 ===(값/타입)같다 !==(값/타입)다르다
    4. 관계연산자 : &&이면서 ||이거나 !부정
    5. (복합)대입연산자 : =대입 += -= *= /= %=
    6. 증감연산자 : 변수++ , ++변수 , 변수-- , --변수
    7. 삼항연산자 : 조건문 ? 참 : 거짓

[ 조건문 ]
    - 조건결과 에 따른 흐름 제어 , 컴퓨터가 논리(상황에 따른 판단력)적인 사고력을 넣어준다.
    - 예] 내가 돈이 10000원이 있으면 택시를 탄다. 아니면 걸어간다.
    - 예] if( 돈>=10000 ){ 택시를탄다; }else{ 걸어간다; }
    1. 형태
        1. if( 조건 ) 참일경우코드;
            2. if( 조건 ) { 참일경우코드; 참일경우코드; }
            3. if( 조건 ) { 참일경우코드; }
                else( 거짓일경우코드; )
            4. if( 조건 ) { 참일경우코드; }
                else if( 조건2 ){ 참2일경우코드; }
                else if( 조건3 ){ 참3일경우코드; }
                else if( 조건4 ){ 참4일경우코드; }
                else{ 거짓일경우코드; }
            5. if중첩
                if( 조건 ){
                    if( 조건 { })
                    else{ }
                } else{ }